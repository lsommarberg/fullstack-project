name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  lint_and_test:
    name: Lint and Test
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })' --quiet"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-6.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version

      - name: Initialize MongoDB
        run: |
          mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin /mongo/mongo-init.js

      - name: Install dependencies for client
        run: |
          cd src/client
          npm ci

      - name: Install dependencies for server
        run: |
          cd src/server
          npm ci

      - name: Run linter for client
        run: |
          cd src/client
          npm run lint

      - name: Run linter for server
        run: |
          cd src/server
          npm run lint

      - name: Run backend tests
        run: |
          cd src/server
          npm test
        env:
          MONGO_URL: ${{ secrets.TEST_MONGODB_URI }}